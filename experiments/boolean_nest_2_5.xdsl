builtin.module() {
  func.func() ["sym_name" = "main", "function_type" = !fun<[], [!i1, !i1]>, "sym_visibility" = "private"] {
    %0 : !i1 = arith.constant() ["value" = true]
    %1 : !i1 = scf.if(%0 : !i1) {
      %2 : !i1 = arith.constant() ["value" = true]
      %3 : !i1 = arith.constant() ["value" = true]
      %4 : !i1 = arith.andi(%3 : !i1, %2 : !i1)
      %5 : !i1 = arith.constant() ["value" = true]
      %6 : !i1 = arith.andi(%5 : !i1, %4 : !i1)
      %7 : !i1 = arith.constant() ["value" = true]
      %8 : !i1 = arith.andi(%7 : !i1, %6 : !i1)
      %9 : !i1 = arith.constant() ["value" = true]
      %10 : !i1 = arith.andi(%9 : !i1, %8 : !i1)
      %11 : !i1 = arith.constant() ["value" = true]
      %12 : !i1 = arith.andi(%11 : !i1, %10 : !i1)
      scf.yield(%12 : !i1)
    } {
      %13 : !i1 = arith.constant() ["value" = false]
      scf.yield(%13 : !i1)
    }
    %14 : !i1 = scf.if(%0 : !i1) {
      %15 : !i1 = arith.constant() ["value" = true]
      %16 : !i1 = arith.constant() ["value" = true]
      %17 : !i1 = arith.andi(%16 : !i1, %15 : !i1)
      %18 : !i1 = arith.constant() ["value" = true]
      %19 : !i1 = arith.andi(%18 : !i1, %17 : !i1)
      %20 : !i1 = arith.constant() ["value" = true]
      %21 : !i1 = arith.andi(%20 : !i1, %19 : !i1)
      %22 : !i1 = arith.constant() ["value" = true]
      %23 : !i1 = arith.andi(%22 : !i1, %21 : !i1)
      %24 : !i1 = arith.constant() ["value" = true]
      %25 : !i1 = arith.andi(%24 : !i1, %23 : !i1)
      scf.yield(%25 : !i1)
    } {
      %26 : !i1 = arith.constant() ["value" = false]
      scf.yield(%26 : !i1)
    }
    func.return(%1 : !i1, %14 : !i1)
  }
}