from xdsl.ir import MLContext
from xdsl.dialects.arith import Addi, Arith, Constant
from xdsl.dialects.builtin import Builtin, ModuleOp
from xdsl.printer import Printer


def main():
    ctx = MLContext()
    Builtin(ctx)
    Arith(ctx)

    depth = 100
    module = ModuleOp.from_region_or_ops([])
    block = module.body.blocks[0]
    op = Constant.from_int_constant(1, 32)
    block.add_op(op)

    for _ in range(depth):
        cons = Constant.from_int_constant(1, 32)
        block.add_op(cons)
        add = Addi.get(cons, op)
        block.add_op(add)
        op = add

    printer = Printer()
    printer.print_op(module)


if __name__ == "__main__":
    main()