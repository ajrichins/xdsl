# This workflow will install MLIR, Python dependencies, run tests and lint with a single version of Python

name: CI - MLIR-based Testing

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    container: ghcr.io/xdslproject/xdsl/mlir:89996621de073e43de7bed552037b10d2a0fdf80
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    steps:
    - uses: actions/checkout@v3
      with:
        path: xdsl

    - name: Python Setup
      run: |
        apt update
        apt install --no-install-recommends --yes python${{matrix.python-version}} python3-pip

    - name: Upgrade pip
      run: |
        pip install --upgrade pip

    - name: Install the package locally and nbval
      run: |
        # Change directory so that xdsl-opt can be found during installation.
        cd xdsl
        pip install -e .[extras]
        pip install nbval

    # - name: Install CI dependencies
    #  run: |
    #    pip install codecov

    - name: Test with pytest and generate code coverage
      run: |
        cd xdsl
        pytest -W error --cov --cov-config=.coveragerc .

    - name: Execute lit tests
      run: |
        cd xdsl
        # Add mlir-opt to the path
        export PATH=$PATH:${GITHUB_WORKSPACE}/llvm-project/build/bin/
        lit -v tests/filecheck/ -DCOVERAGE

    - name: Test MLIR dependent examples/tutorials
      run: |
        cd xdsl
        # Add mlir-opt to the path
        export PATH=$PATH:${GITHUB_WORKSPACE}/llvm-project/build/bin/
        pytest --nbval docs/mlir_interoperation.ipynb --maxfail 1 -vv

    - name: Combine coverage data
      run: |
        cd xdsl
        coverage combine --append
        coverage report
        coverage xml

    # - name: Upload coverage to Codecov
    #   if: matrix.python-version == '3.10'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     fail_ci_if_error: true
    #     verbose: true
    #     directory: ${GITHUB_WORKSPACE}/../
    #     files: coverage.xml
    #     token: ${{ secrets.CODECOV_TOKEN }}
